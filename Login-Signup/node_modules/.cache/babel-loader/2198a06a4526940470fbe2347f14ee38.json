{"ast":null,"code":"import _regeneratorRuntime from \"/Users/AlakhSingh/Projects/login_page/notes-app-client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/AlakhSingh/Projects/login_page/notes-app-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/AlakhSingh/Projects/login_page/notes-app-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/AlakhSingh/Projects/login_page/notes-app-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/AlakhSingh/Projects/login_page/notes-app-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/AlakhSingh/Projects/login_page/notes-app-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/AlakhSingh/Projects/login_page/notes-app-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/AlakhSingh/Projects/login_page/notes-app-client/src/containers/Signup.js\";\nimport React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./Signup.css\";\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Signup).call(this, props));\n\n    _this.handleChange = function (event) {\n      var url = \"http://localhost:3000/signup\";\n      var data = {\n        username: _this.state.email,\n        password: _this.state.password\n      };\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          error: data.status.error\n        });\n\n        if (data.status.error === \"false\") {\n          console.log(\"user has signed up!\");\n\n          _this.props.history.push(\"/\");\n        }\n      }).catch(function (error) {\n        return console.error(\"Error:\", error);\n      });\n      event.preventDefault();\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  isLoading: true\n                });\n\n                _this.setState({\n                  newUser: \"test\"\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      newUser: null\n    };\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.email.length > 0 && this.state.password.length > 0 && this.state.password === this.state.confirmPassword;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"email\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Email\"), React.createElement(FormControl, {\n        autoFocus: true,\n        type: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"password\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Password\"), React.createElement(FormControl, {\n        value: this.state.password,\n        onChange: this.handleChange,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"confirmPassword\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(FormControl, {\n        value: this.state.confirmPassword,\n        onChange: this.handleChange,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"btn btn-outline-primary\",\n        block: true,\n        bsSize: \"large\",\n        disabled: !this.validateForm(),\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Signup\")));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nexport { Signup as default };","map":{"version":3,"sources":["/Users/AlakhSingh/Projects/login_page/notes-app-client/src/containers/Signup.js"],"names":["React","Component","Button","FormGroup","FormControl","ControlLabel","Signup","props","handleChange","event","url","data","username","state","email","password","fetch","method","body","JSON","stringify","headers","then","response","json","setState","error","status","console","log","history","push","catch","preventDefault","handleSubmit","isLoading","newUser","confirmPassword","length","validateForm"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,EAAyCC,YAAzC,QAA6D,iBAA7D;AAEA,OAAO,cAAP;;IAEqBC,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UAmBnBC,YAnBmB,GAmBJ,UAAAC,KAAK,EAAI;AACtB,UAAMC,GAAG,GAAG,8BAAZ;AACA,UAAIC,IAAI,GAAG;AAAEC,QAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWC,KAAvB;AAA8BC,QAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWE;AAAnD,OAAX;AACAC,MAAAA,KAAK,CAACN,GAAD,EAAM;AACTO,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAFG;AAGTU,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHA,OAAN,CAAL,CAOGC,IAPH,CAOQ,UAASC,QAAT,EAAmB;AACvB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OATH,EAUGF,IAVH,CAUQ,UAAAX,IAAI,EAAI;AACZ,cAAKc,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAEf,IAAI,CAACgB,MAAL,CAAYD;AAArB,SAAd;;AACA,YAAIf,IAAI,CAACgB,MAAL,CAAYD,KAAZ,KAAsB,OAA1B,EAAmC;AACjCE,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AACA,gBAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF,OAhBH,EAiBGC,KAjBH,CAiBS,UAAAN,KAAK;AAAA,eAAIE,OAAO,CAACF,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAAJ;AAAA,OAjBd;AAkBAjB,MAAAA,KAAK,CAACwB,cAAN;AACD,KAzCkB;;AAAA,UA2CnBC,YA3CmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BA2CJ,iBAAMzB,KAAN;AAAA;AAAA;AAAA;AAAA;AACbA,gBAAAA,KAAK,CAACwB,cAAN;;AAEA,sBAAKR,QAAL,CAAc;AAAEU,kBAAAA,SAAS,EAAE;AAAb,iBAAd;;AAEA,sBAAKV,QAAL,CAAc;AAAEW,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA3CI;;AAAA;AAAA;AAAA;AAAA;;AAGjB,UAAKvB,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXsB,MAAAA,eAAe,EAAE,EAHN;AAIXD,MAAAA,OAAO,EAAE;AAJE,KAAb;AAHiB;AASlB;;;;mCAEc;AACb,aACE,KAAKvB,KAAL,CAAWC,KAAX,CAAiBwB,MAAjB,GAA0B,CAA1B,IACA,KAAKzB,KAAL,CAAWE,QAAX,CAAoBuB,MAApB,GAA6B,CAD7B,IAEA,KAAKzB,KAAL,CAAWE,QAAX,KAAwB,KAAKF,KAAL,CAAWwB,eAHrC;AAKD;;;6BAkCQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,OAArB;AAA6B,QAAA,MAAM,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,WAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,KAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKN,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAUE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,UAArB;AAAgC,QAAA,MAAM,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWE,QADpB;AAEE,QAAA,QAAQ,EAAE,KAAKP,YAFjB;AAGE,QAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAVF,EAkBE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,iBAArB;AAAuC,QAAA,MAAM,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWwB,eADpB;AAEE,QAAA,QAAQ,EAAE,KAAK7B,YAFjB;AAGE,QAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAlBF,EA0BE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,yBADZ;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,MAAM,EAAC,OAHT;AAIE,QAAA,QAAQ,EAAE,CAAC,KAAK+B,YAAL,EAJb;AAKE,QAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BF,CADF,CADF;AAwCD;;;;EA7FiCtC,S;;SAAfK,M","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\n\nimport \"./Signup.css\";\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      newUser: null\n    };\n  }\n\n  validateForm() {\n    return (\n      this.state.email.length > 0 &&\n      this.state.password.length > 0 &&\n      this.state.password === this.state.confirmPassword\n    );\n  }\n\n  handleChange = event => {\n    const url = \"http://localhost:3000/signup\";\n    let data = { username: this.state.email, password: this.state.password };\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ error: data.status.error });\n        if (data.status.error === \"false\") {\n          console.log(\"user has signed up!\");\n          this.props.history.push(\"/\");\n        }\n      })\n      .catch(error => console.error(\"Error:\", error));\n    event.preventDefault();\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({ isLoading: true });\n\n    this.setState({ newUser: \"test\" });\n  };\n\n  render() {\n    return (\n      <div className=\"Signup\">\n        <form onSubmit={this.handleSubmit}>\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            <ControlLabel>Email</ControlLabel>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <ControlLabel>Password</ControlLabel>\n            <FormControl\n              value={this.state.password}\n              onChange={this.handleChange}\n              type=\"password\"\n            />\n          </FormGroup>\n          <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n            <ControlLabel>Confirm Password</ControlLabel>\n            <FormControl\n              value={this.state.confirmPassword}\n              onChange={this.handleChange}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button\n            className=\"btn btn-outline-primary\"\n            block\n            bsSize=\"large\"\n            disabled={!this.validateForm()}\n            type=\"submit\"\n          >\n            Signup\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}